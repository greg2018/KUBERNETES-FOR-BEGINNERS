Certified Kubernetes Application Developer: 

Candidate Handbook: https://www.cncf.io/certification/candidate-handbook

Exam Tips: https://www2.thelinuxfoundation.org/ckad-tips

Keep the code - DEVOPS15 - handy while registering for the CKA or CKAD exams at Linux Foundation to get a 15% discount.

Pycharm

www.jetbrains.com

Kodekloud

https://kodekloud.com/

Accessing the Labs
All hands-on labs are hosted on KodeKloud. Use this link to register for the labs associated with this course.  Please make sure to use the same name as your profile in Udemy. That's how we know you are our Udemy student.

You DON'T have to make any additional payment.

Link: https://kodekloud.com/purchase?product_id=2021258&coupon_code=UDEMYSTUDENT151112

If coupon is not applied automatically use the code UDEMYSTUDENT151112

#Orchestration Technologies
	Docker Swarm
	Kubernetes
	MESOS
	
Nodes(Minions)

Minikube
Microk8s
https://microk8s.io/

kubeadm is a tool that enables Kubernetes administrators to quickly and easily bootstrap minimum viable clusters that are fully compliant with Certified Kubernetes guidelines.

etcd
Consistent and highly-available key value store used as Kubernetes' backing store for all cluster data.

If your Kubernetes cluster uses etcd as its backing store, make sure you have a back up plan for those data.


# minikube resources

minikube start
https://kubernetes.io/docs/tasks/tools/
ttps://minikube.sigs.k8s.io/docs/start/

Install and Set Up kubectl
https://kubernetes.io/docs/tasks/tools/install-kubectl/
https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/windows/amd64/kubectl.exe


Install Kubectl
VirtualBox
minikube start --driver=virtualbox

minikube start --driver=docker

minikube start --driver=hyperv 

minikube --memory 4096 --cpus 8 start --driver=hyperv 

kubectl get node minikube -o jsonpath='{.status.capacity}'

C:\UserApps3\kubernetesWorkspaces\KUBERNETES-FOR-BEGINNERS>kubectl get services
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   39s


minikube config set driver hyperv



Special features
The minikube start command supports additional hyperv specific flags:
--hyperv-virtual-switch: Name of the virtual switch the minikube VM should use. Defaults to first found
--hyperv-use-external-switch: Use external virtual switch over Default Switch if virtual switch not explicitly specified, creates a new one if not found. If the adapter is not specified, the driver first looks up LAN adapters before other adapters (WiFi, …). Or the user may specify an adapter to attach to the external switch. Default false
--hyperv-external-adapter: External adapter on which the new external switch is created if no existing external switch is found. Since Windows 10 only allows one external switch for the same adapter, it finds the virtual switch before creating one. The external switch is created and named “minikube”






minikube status 
minikube start
kubectl get nodes
minikube stop

minikube delete



minikube kubectl -- get pods -A

#1) Steps to practice example "hello-minikube"
#1.1) kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.4
#1.2) kubectl expose deployment hello-minikube --type=NodePort --port=8080
#1.3) minikube service hello-minikube --url
#1.4) kubectl port-forward service/hello-minikube 7080:8080
	http://localhost:7080/
#1.5) minikube service hello-minikube
will popup a browser windows/amd64/kubectl


 hello hello-minikube 

kubectl delete deployment hello-minikube

###


kubectl create deployment nginx --image nginx

kubectl expose deployment nginx --type=NodePort --port=80

kubectl port-forward service/nginx 80:80

minikube service nginx --url

kubectl describe pod nginx

kubectl get pods -o wide


#01) pod-definition.yaml example
kubectl create -f pod-definition.yaml

kubectl get pods

kubectl describe pod myapp-pod

kubectl expose pod myapp-pod --type=NodePort --port=80

kubectl get services myapp-pod

minikube service myapp-pod --url

kubectl delete pod myapp-pod
kubectl delete services myapp-pod

####
#02) pod.yaml example
kubectl apply -f pod.yaml

kubectl expose pod nginx --type=NodePort --port=80

kubectl describe pod nginx


kubectl run nginx --image=nginx

 kubectl describe pod webapp
 
 kubectl delete --all pods --namespace=default
 
 kubectl delete --all deployments --namespace=default






